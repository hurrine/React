JSON.parse() 和 JSON.stringify()
上面的 jQuery 源码是否让你眼花缭乱？有没有什么办法无脑实现深拷贝呢？JSON.parse() 和 JSON.stringify() 给了我们一个基本的解决办法。

1
2
3
4
5
6
7
8
var target = {a: 1, b: 1, c: {ca: 11, cb: 12, cc: 13}};
var targetCopy = JSON.parse(JSON.stringify(target));
targetCopy.a = 2;
targetCopy.c.ca = 21;
console.log(target);   // {a: 1, b: 1, c: {ca: 11, cb: 12, cc: 13}}
console.log(targetCopy);    // {a: 2, b: 1, c: {ca: 21, cb: 12, cc: 13}}
console.log(target === targetCopy);  // false
 
可以看到改变 targetCopy 并没有改变原始的 target，继承的属性也没有丢失，因此实现了基本的深拷贝。
但是用 JSON.parse() 和 JSON.stringify() 会有一个问题。
JSON.parse() 和 JSON.stringify() 能正确处理的对象只有 Number、String、Array 等能够被 json 表示的数据结构，因此函数这种不能被 json 表示的类型将不能被正确处理。

1
2
3
4
5
6
7
8
9
10
var target = {
    a: 1,
    b: 2,
    hello: function() { 
            console.log("Hello, world!");
    }
};
var copy = JSON.parse(JSON.stringify(target));
console.log(copy);   // {a: 1, b: 2}
 
上面的例子可以看出，hello 这个属性由于是函数类型，使用 JSON.parse() 和 JSON.stringify() 后丢失了。
因此 JSON.parse() 和 JSON.stringify() 还是需要谨慎使用。


http://www.alloyteam.com/2017/08/12978/


这是因为浅拷贝只复制一层对象的属性，并不包括对象里面的为引用类型的数据。所以就会出现改变浅拷贝得到的 obj3 中的引用类型时，会使原始数据得到改变。
深拷贝：将 B 对象拷贝到 A 对象中，包括 B 里面的子对象，
浅拷贝：将 B 对象拷贝到 A 对象中，但不包括 B 里面的子对象



https://juejin.im/post/59ac1c4ef265da248e75892b

